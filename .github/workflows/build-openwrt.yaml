name: Build OpenWRT

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'build-openwrt'

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    name: Build ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: [ImmortalWrt-x86_64]

    steps:
      - name: Checkout
        uses: actions/checkout@main
      
      - name: Initialization Setting
        run: |
          source ${{ github.workspace }}/build/${{ matrix.target }}/setting.ini
          echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
          echo "UPLOAD_COWTRANSFER=${UPLOAD_COWTRANSFER}" >> $GITHUB_ENV
          echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> $GITHUB_ENV
          echo "TZ=Asia/Shanghai" >> $GITHUB_ENV

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        run: |
          df -hT $PWD
          cd ${{ github.workspace }}
          git clone ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt

      - name: Update and Install feeds
        run: |
          cd ${{ github.workspace }}/openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e build/${{ matrix.target }}/.config ] && mv build/${{ matrix.target }}/.config ${{ github.workspace }}/openwrt/.config
          if [ -f build/${{ matrix.target }}/diy.sh ]; then
            mv build/${{ matrix.target }}/diy.sh ${{ github.workspace }}/openwrt/diy.sh
            chmod +x ${{ github.workspace }}/openwrt/diy.sh
            cd ${{ github.workspace }}/openwrt
            /bin/bash ./diy.sh
          fi

      - name: Download package
        id: package
        run: |
          cd ${{ github.workspace }}/openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          df -hT

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M"-${{ matrix.target }})" >> $GITHUB_ENV

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Organize files
        id: organize
        if: steps.compile.outputs.status == 'success' && !cancelled()
        run: |
          cd ${{ github.workspace }}/openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware to WeTransfer & CowTransfer
        if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${{ env.FIRMWARE }} 2>&1 | tee wetransfer.log
          echo "WETRANSFER_URL=$(cat wetransfer.log | grep https)" >> $GITHUB_ENV
          ./transfer cow --block 2621440 -s -p 64 --no-progress ${{ env.FIRMWARE }} 2>&1 | tee cowtransfer.log
          echo "COWTRANSFER_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

      - name: Generate release tag
        id: tag
        if: steps.organize.outputs.status == 'success' && !cancelled()
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M"-OpenWRT)"
          touch release.txt
          echo "💐 奶牛快传(国内高速🚀下载)： ${{ env.COWTRANSFER_URL }}" >> release.txt
          echo "⛄ WeTransfer(国外高速🚀下载)： ${{ env.WETRANSFER_URL }}" >> release.txt
          echo "::set-output name=status::success"

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && env.UPLOAD_RELEASE && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.REPO_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 30
          keep_minimum_runs: 6

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if: (!cancelled())
        with:
          keep_latest: 9
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
